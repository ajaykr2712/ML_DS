# ML Arsenal - Comprehensive .gitignore
# =====================================
# This file specifies which files and directories should be ignored by git
# Covers Python, ML/DS, data science tools, and deployment artifacts

# =============================================================================
# Python
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# Machine Learning & Data Science
# =============================================================================

# Data files (should be managed with DVC or external storage)
data/raw/
data/processed/
data/interim/
data/external/
*.csv
*.tsv
*.xlsx
*.xls
*.parquet
*.feather
*.hdf5
*.h5
*.pkl
*.pickle
*.joblib
*.npz
*.npy
*.mat

# Model artifacts (should be in model registry)
models/trained/
models/checkpoints/
models/experiments/
*.pth
*.pt
*.ckpt
*.pb
*.onnx
*.tflite
*.h5
*.hdf5
*.bin
*.safetensors

# Experiment tracking
experiments/mlruns/
experiments/wandb/
experiments/tensorboard/
experiments/neptune/
mlruns/
wandb/
tensorboard_logs/
lightning_logs/
.neptune/

# Notebooks (keep clean versions, ignore checkpoints and outputs)
.ipynb_checkpoints/
*/.ipynb_checkpoints/*
*.nbconvert.py

# Jupyter Lab workspace
.jupyter-server-log.*
.virtual_documents/

# =============================================================================
# Deep Learning Frameworks
# =============================================================================

# PyTorch
*.pth
*.pt
lightning_logs/

# TensorFlow
*.pb
*.tflite
saved_model/
tf_logs/
*.tfrecord
*.tfrecords

# Keras
*.h5
*.keras

# JAX
*.pkl

# Hugging Face
.cache/huggingface/
transformers_cache/

# =============================================================================
# Development Tools
# =============================================================================

# VS Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# =============================================================================
# Operating System
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
*.bak
*.swp
~$*
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# Docker & Containers
# =============================================================================

# Docker
.dockerignore
Dockerfile.dockerignore
docker-compose.override.yml
.docker/

# =============================================================================
# Cloud & Deployment
# =============================================================================

# AWS
.aws/
*.pem

# GCP
*.json
.gcp/
gcp-credentials.json

# Azure
.azure/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
*.tfvars

# Kubernetes
*.kubeconfig
kubeconfig

# Helm
charts/*.tgz

# =============================================================================
# CI/CD
# =============================================================================

# GitHub Actions
.github/workflows/*.log

# GitLab CI
.gitlab-ci-local/

# Jenkins
.jenkins/

# =============================================================================
# Monitoring & Logging
# =============================================================================

# Logs
logs/
*.log
*.log.*
.log

# Prometheus
prometheus_data/

# Grafana
grafana_data/

# ELK Stack
elasticsearch_data/
logstash_data/
kibana_data/

# =============================================================================
# Security & Secrets
# =============================================================================

# Environment variables
.env
.env.local
.env.*.local
.env.production
.env.staging
.env.development

# API keys and secrets
*.key
*.pem
*.p12
*.crt
secrets/
api_keys.txt
.secrets/

# OAuth
.oauth/

# =============================================================================
# Databases
# =============================================================================

# SQLite
*.db
*.sqlite
*.sqlite3

# PostgreSQL
*.pgdump
*.sql

# MongoDB
*.bson

# Redis
dump.rdb

# =============================================================================
# Reports & Documentation
# =============================================================================

# Generated reports
reports/performance/
reports/figures/
*.pdf
*.html

# Documentation builds
docs/_build/
docs/build/
site/

# =============================================================================
# Profiling & Performance
# =============================================================================

# Profiling
*.prof
*.stats
*.profile
.prof/

# Memory profiling
*.dat
mprofile_*.dat

# Line profiler
*.lprof

# =============================================================================
# Cache & Temporary Files
# =============================================================================

# Cache directories
.cache/
cache/
__cache__/
.tmp/
tmp/
temp/

# Download cache
downloads/
.downloads/

# Build artifacts
build/
dist/
*.egg-info/

# =============================================================================
# ML-specific Tools
# =============================================================================

# DVC (Data Version Control)
.dvc/cache/
.dvc/tmp/
.dvc/plots/

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# ClearML
.clearml/

# Sacred
sacred_logs/

# Optuna
optuna_storage/

# Ray Tune
ray_results/

# Hydra
outputs/
multirun/
.hydra/

# =============================================================================
# Feature Stores
# =============================================================================

# Feast
.feast/
feature_repo/

# Tecton
.tecton/

# =============================================================================
# Data Validation
# =============================================================================

# Great Expectations
great_expectations/uncommitted/
great_expectations/checkpoints/
great_expectations/expectations/
great_expectations/plugins/

# Pandera
.pandera/

# =============================================================================
# AutoML
# =============================================================================

# AutoML outputs
automl_outputs/
auto_ml_results/

# H2O
h2o_logs/

# TPOT
tpot_outputs/

# =============================================================================
# Distributed Computing
# =============================================================================

# Spark
spark-warehouse/
derby.log
metastore_db/

# Dask
dask-worker-space/

# Ray
/tmp/ray/

# =============================================================================
# Custom Project-specific
# =============================================================================

# Project-specific data (customize as needed)
private_data/
confidential/
proprietary/

# Large files that should be managed externally
*.zip
*.tar.gz
*.rar
*.7z

# Benchmark results
benchmark_results/
performance_logs/

# Custom configuration overrides
config_local.yaml
config_override.yaml
local_config.py

# =============================================================================
# Backup Files
# =============================================================================

# Backup files
*.bak
*.backup
*~
*.orig

# =============================================================================
# End of .gitignore
# =============================================================================

# Note: This .gitignore is comprehensive but you may need to customize it
# based on your specific project needs. Always review before committing.
# 
# Remember to use DVC or similar tools for data versioning
# Use model registries for model artifact management
# Store secrets in secure secret management systems
